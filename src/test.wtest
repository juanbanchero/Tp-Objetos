import album.*
import Cancion.*
import criterios.*
import laTrastienda.*
import Lugar.*
import lunaPark.*
import Mashup.*
import metodosDeCanto.*
import musico.*
import musicoEnGrupo.*
import musicoSolista.*
import luisAlberto.*
import Presentacion.*
import fender.*
import gibson.*
import remix.*
import pdpalooza.*
import Banda.*
import cobranzaPorExpectativaInflacionaria.*
import cobranzaPorCapacidad.*
import cobranzaPorEspectadores.*

describe "group of tests" {
	
	var lucia
	var joaquin
	var kike
	var soledad
	var especialLaFamilia
	var laFamilia
	var laSole
	var eres
	var corazonAmericano
	var paraLosArboles
	var cisne
	var almaDeDiamante
	var justCrisantemo
	var crisantemo
	var presentacionLuna
	var presentacionLaTrastienda
	var remixLaFamilia
	var mashupAlmaDeDiamanteCrisantemo
	var mashupCrisantemoAlmaDeDiamante
	var mashupTriple
	var letraAlmaDiamanteCrisantemo
	var letraCrisantemoAlmaDiamante
	var prixDAmi
	var laCueva
	var pimpisole
	var cachorro
	var eternoRetorno
	var felix
	
	fixture {

		letraCrisantemoAlmaDiamante = "Tocame junto a esta pared, yo quede por aqui, cuando no hubo mas luz... quiero mirar a traves de mi piel... Crisantemo, que se abrio... encuentra el camino hacia el cielo Ven a mi con tu dulce luz alma de diamante. Y aunque el sol se nuble despues sos alma de diamante. Cielo o piel silencio o verdad sos alma de diamante. Por eso ven asi con la humanidad alma de diamante"
		letraAlmaDiamanteCrisantemo = "Ven a mi con tu dulce luz alma de diamante. Y aunque el sol se nuble despues sos alma de diamante. Cielo o piel silencio o verdad sos alma de diamante. Por eso ven asi con la humanidad alma de diamante Tocame junto a esta pared, yo quede por aqui, cuando no hubo mas luz... quiero mirar a traves de mi piel... Crisantemo, que se abrio... encuentra el camino hacia el cielo"
		
		laFamilia = new Cancion("La Familia",264,"Quiero brindar por mi gente sencilla, por el amor brindo por la Familia")
		eres = new Cancion("Eres",145,"Eres lo mejor que me paso en la vida, no tengo duda, no habra nada despues de ti. Eres lo que le dio brillo al dia a dia, y asi sera por siempre, no cambiara, hasta el final de mis dias")
		corazonAmericano = new Cancion("Corazon Americano",154,"Canta corazon, canta mas alto, que tu pena al fin se va marchando, el nuevo milenio ha de encontrarnos, junto corazon, como soï¿½amos")
		cisne = new Cancion("Cisne",312,"Hoy el viento se abrio quedo vacio el aire una vez mas y el manantial broto y nadie esta aqui y puedo ver que solo estallan las hojas al brillar")
		almaDeDiamante = new Cancion("Alma De Diamante",216,"Ven a mi con tu dulce luz alma de diamante. Y aunque el sol se nuble despues sos alma de diamante. Cielo o piel silencio o verdad sos alma de diamante. Por eso ven asi con la humanidad alma de diamante")
		crisantemo = new Cancion("Crisantemo",175,"Tocame junto a esta pared, yo quede por aqui, cuando no hubo mas luz... quiero mirar a traves de mi piel... Crisantemo, que se abrio... encuentra el camino hacia el cielo")
		remixLaFamilia = new Remix(laFamilia)
		mashupAlmaDeDiamanteCrisantemo = new Mashup([almaDeDiamante,crisantemo])
		mashupCrisantemoAlmaDeDiamante = new Mashup([crisantemo,almaDeDiamante])
		mashupTriple = new Mashup(#{eres,corazonAmericano,cisne})
		
		especialLaFamilia = new Album(#{laFamilia},17,06,1992,100000,89000)
		laSole = new Album(#{eres,corazonAmericano},04,02,2005,200000,130000)
		paraLosArboles = new Album(#{cisne,almaDeDiamante},31,03,2003,50000,49000)
		justCrisantemo = new Album(#{crisantemo},05,12,2007,28000,27500)
		
		joaquin = new MusicoEnGrupo(20,#{especialLaFamilia},new Larguero(300),new CobranzaPorExclusividad(100),5)
		lucia = new MusicoSolista(70,#{},new Palabrero("Familia"),new CobranzaPorCapacidad(500,5000))
		kike = new MusicoEnGrupo(60,#{},imparero,20,new CobranzaPorExpectativaInflacionaria(4000,8,1,2018,0.5),10)
		soledad = new MusicoSolista(55,#{laSole},new Palabrero("amor"),new CobranzaPorExclusividad(6000))
		luisAlberto.agregarAlbum(paraLosArboles)
		luisAlberto.agregarAlbum(justCrisantemo)
		luisAlberto.metodoCobranza(new CobranzaPorExpectativaInflacionaria(1000,01,09,2017,0.2))
		
		pimpisole = new Banda(cachorro, #{soledad,joaquin,lucia})
		eternoRetorno = new Banda(felix, #{kike,luisAlberto})
		
		cachorro = new Representante(1982)
		felix = new Representante(500)
		
		prixDAmi = new Lugar(150)
		laCueva = new Lugar(14000)
		
		presentacionLuna = new Presentacion(20,04,2017,lunaPark,#{joaquin,lucia,luisAlberto})
		presentacionLaTrastienda = new Presentacion(15,11,2017,laTrastienda,#{joaquin,lucia,luisAlberto})
		
	}
	
	     //////// TESTS DE LA PRIMERA ITERACION
	     
	test "Joaquin canta en el grupo Pimpinela. Su habilidad es 25" {
		assert.equals(25, joaquin.cantar())
	}
	
	test "Joaquin canta en el grupo Pimpinela y decide iniciar su carrera como solista. Su habilidad es 20"{
		joaquin.carreraSolista()
		assert.equals(20, joaquin.cantar())
	}
	
	test "Lucia se integra a Pimpinela. Su habilidad es de 50" {
		lucia.meterseEnGrupo()
		assert.equals(50, lucia.cantar())
	}
	
	test "Lucia es una cantante solista. Su habilidad es de 70" {
		lucia.carreraSolista()
		assert.equals(70,lucia.cantar())
	}
	
	test "Luis Alberto toca con la Fender. Su habilidad es de 80"{
		luisAlberto.usarGuitarra(fender)
		assert.equals(80,luisAlberto.habilidad())
	}
	
	test "Luis Alberto toca con la Gibson sana. Su habilidad es de 100"{
		luisAlberto.usarGuitarra(gibson)
		assert.equals(100,luisAlberto.habilidad())
	}
	
	test "Alguien maltrata a la Gibson, y ahora esta no esta sana"{
		gibson.esMaltratada()
		assert.that(!gibson.estaSana())
	}
	
	test "Luis Alberto toca con la Gibson, la cual es maltratada. Su habilidad es de 40" {
		gibson.esMaltratada()
		luisAlberto.usarGuitarra(gibson)
		assert.equals(40,luisAlberto.habilidad())
	}
	
	test "Joaquin interpreta bien la cancion 'La Familia' " {
		assert.that(joaquin.interpretaBien(laFamilia))
	}
	
	test "Joaquin interpreta bien la cancion 'Cisne' " {
		assert.that(joaquin.interpretaBien(cisne))
	}
	
	test "Lucia interpreta bien la cancion 'La Familia' " {
		assert.that(lucia.interpretaBien(laFamilia))
	}
	
	test "Lucia interpreta bien la cancion 'Cisne' " {
		assert.that(lucia.interpretaBien(cisne))
	}
	
	test "luisALberto interpreta bien la cancion 'Cisne' " {
		assert.that(luisAlberto.interpretaBien(cisne))
	}
	test "luisALberto interpreta bien la cancion 'La familia' " {
		assert.that(luisAlberto.interpretaBien(laFamilia))
	}	
	test "Joaquin actua en el Luna Park en una fecha compartida y cobra 50" {
		assert.equals(50,joaquin.costo(presentacionLuna))
	}
	
	test "Joaquin actua solo en La Trastienda y cobra 100" {
		presentacionLaTrastienda.sePresentaSolo(joaquin)
		assert.equals(100,joaquin.costo(presentacionLaTrastienda))
	}
	
	test "La capacidad de La Trastienda para el 05/08/2017 es 700" {
		var fecha = new Date (05,08,2017)
		assert.equals(700,laTrastienda.capacidad(fecha))
	}
	
	test "La capacidad de La Trastienda para el 08/08/2017 es 400" {
		var fecha = new Date(08,08,2017)
		assert.equals(400,laTrastienda.capacidad(fecha))
	}
	
	test "Lucia cobra 400 por su presentacion es La Trastienda" {
		assert.equals(400,lucia.costo(presentacionLaTrastienda))
	}
	
	test "Lucia cobra 500 por su presentacion en el Luna Park" {
		assert.equals(500,lucia.costo(presentacionLuna))
	}
	
	test "Luis Alberto cobra 1000 por presentarse en el Luna Park" {
		assert.equals(1000,luisAlberto.costo(presentacionLuna))
	}
	
	test "Luis Alberto cobra 1200 por presentarse en La Trastienda" {
		assert.equals(1200,luisAlberto.costo(presentacionLaTrastienda))
	}
	
	test "La presentacion del Luna Park recauda 1550" {
		assert.equals(1550,presentacionLuna.recaudacion())
	}
		
	test "La presentacion de La Trastienda recauda 1650" {
		assert.equals(1650,presentacionLaTrastienda.recaudacion())
	}
	
	/////// TESTS DE LA SEGUNDA ITERACION
	
	test "La cancion Crisantemo es corta" {
		assert.that(crisantemo.esCorta())
	}
	
	test "La cancion Alma de Diamante no es corta" {
		assert.that(!almaDeDiamante.esCorta())
	}
	
	test "Soledad es minimalista" {
		assert.that(soledad.esMinimalista())
	}
	
	test "luisAlberto no es minimalista"{
		assert.that(!luisAlberto.esMinimalista())
	}
	
	test "Joaquin no es minimalista" {
		assert.that(!joaquin.esMinimalista())
	}
	
	test "Una cancion de Luis Alberto dice cielo" {
		assert.equals(1,luisAlberto.queCancionesContienen("cielo").size())
	}
	
	test "Una cancion de Luis Alberto dice Cielo" {
		assert.equals(1,luisAlberto.queCancionesContienen("Cielo").size())
	}
	
	test "Crisantemo, de Luis Alberto, dice cielo" {
		assert.that(crisantemo.dice("cielo"))
	}
	
	test "Alma de Diamante, de Luis Alberto, dice cielo" {
		assert.that(almaDeDiamante.dice("Cielo"))
	}
	
	test "Ninguna cancion de Luis Alberto dice pujante" {
		assert.equals(0,luisAlberto.queCancionesContienen("pujante").size())
	}
	
	test "La obra de Kike dura 0 segundos" {
		assert.equals(0,kike.duracionDeSuObra())
	}
	
	test "La obra de Soledad dura 299 segundos" {
		assert.equals(299,soledad.duracionDeSuObra())
	}
	
	test "La obra de Luis Alberto dura 703 segundos" {
		assert.equals(703,luisAlberto.duracionDeSuObra())
	}
	
	test "La cancion mas larga del disco ''Para los Arboles'' es Alma de Diamante" {
		assert.equals(almaDeDiamante,paraLosArboles.mayorCancion(criterioPorLetra))
	}
	
	test "La cancion mas larga del disco ''La Sole'' es Eres" {
		assert.equals(eres,laSole.mayorCancion(criterioPorLetra))
	}
	
	test "La cancion mas larga del disco ''Especial La Familia'' es La Familia" {
		assert.equals(laFamilia,especialLaFamilia.mayorCancion(criterioPorLetra))
	}	
	test "Luis Alberto la pego"{
		assert.that(luisAlberto.laPego())
	}
	
	test "Soledad no la pego"{
		assert.that(!soledad.laPego())
	}
	
	test "Joaquin la pego"{
		assert.that(joaquin.laPego())
	}
	
	/////// TESTS DE LA TERCERA ITERACION

	test "La cancion con mayor duracion del album 'Para Los Arboles' es 'Cisne'" {
		assert.equals(cisne,paraLosArboles.mayorCancion(criterioPorDuracion))
	}
	
	test "La cancion con titulo mas largo del disco 'La Sole' es 'Corazon Americano'" {
		assert.equals(corazonAmericano,laSole.mayorCancion(criterioPorTitulo))
	}
	
	test "El remix de 'La Familia' dura 792 segundos" {
		assert.equals(792, remixLaFamilia.duracion())
	}
	
	test "El remix de 'La Familia' dice 'baby'" {
		assert.that(remixLaFamilia.dice("baby"))
	}
	
	test "El remix de 'La Familia' dice 'yeah'" {
		assert.that(remixLaFamilia.dice("yeah"))
	}
	
	test "El mashup entre Eres, Corazon Americano y Cisne dura 312 segundos" {
		assert.equals(312,mashupTriple.duracion())
	}
	
	test "La letra del mashup entre Alma de Diamante y Crisantemo es la combinacion de ambas letras en ese orden" {
		assert.equals(letraAlmaDiamanteCrisantemo,mashupAlmaDeDiamanteCrisantemo.letra())
	}
	
	test "La letra del mashup entre Crisantemo y Alma de Diamante es distinta que la del mashup de Alma de diamante y Crisantemo" {
		assert.notEquals(mashupAlmaDeDiamanteCrisantemo.letra(),mashupCrisantemoAlmaDeDiamante.letra())
	}
	
	test "La duracion del mashup entre Eres, Corazon Americano y Cisne es 312"{
		assert.equals(312, mashupTriple.duracion())
	}
	
		test "Un musico con habilidad menor a 70 no puede tocar en Pdpalooza" {
		assert.throwsExceptionWithMessage("El musico no tiene la habilidad necesaria para presentarse", {pdpalooza.agregarMusico(kike)})
	}
	
	test "Un musico sin ninguna cancion de su autoria no tocar en Pdpalooza" {
		assert.throwsExceptionWithMessage("El musico no tiene ninguna cancion de su autoria", {pdpalooza.agregarMusico(lucia)})
	}
	
	////TEST CUARTA ITERACION
	
	test "Joaquï¿½n interpreta bien 'La Familia', que es de su autoria" {
		assert.that(joaquin.interpretaBien(laFamilia))
	}
	
	test "Joaquï¿½n no interpreta bien 'Corazon Americano', ya que no posee la habilidad necesaria, no es de su autoria y no es de mas de 300 segundos" {
		assert.that(!joaquin.interpretaBien(corazonAmericano))
	}
	
	test "Lucia interpreta bien 'La Familia', ya dice ella es palabrera de 'Familia'" {
		assert.that(lucia.interpretaBien(laFamilia))
	}
	
	test "Joaquï¿½n interpreta bien 'Cisne', ya que el es larguero de 300 segundos, y Cisne dura 312" {
		assert.that(joaquin.interpretaBien(cisne))
	}
	
	test "Kike interpreta bien 'Crisantemo', ya que esta dura 175 segundos y el es imparero"{
		assert.that(kike.interpretaBien(crisantemo))
	}
	
	test "La habilidad de 'pimpisole' es 121"{
		assert.equals(121, pimpisole.habilidad())
	}
	
	test "La habilidad de 'El eterno retorno' es 165"{
		assert.equals(165, eternoRetorno.habilidad())
	}
		
	test "pimpisole puede tocar la cancion 'la familia' "{
		assert.that(pimpisole.puedeTocar(laFamilia))
	}
	
	test "pimpisole no puede tocar la cancion '' "{
		assert.notThat(pimpisole.puedeTocar(cisne))
	}
	test "el eterno retorno puede tocar la cancion 'crisantemo' "{
		assert.that(eternoRetorno.puedeTocar(crisantemo))
	}
	
	test "el eterno retorno no puede tocar la cancion 'cisne' "{
		assert.notThat(eternoRetorno.puedeTocar(cisne))
	}
	
		test "La magia producida por un show en el que se presentan joaquin, lucia y el kike es de 150" {
		var altaFecha = new Presentacion(13,11,2018,lunaPark,#{kike,joaquin,lucia})
		assert.equals(150,altaFecha.nivelDeMagia())
	}
	
	test "Entre 'La Familia', 'Cisne' y 'Alma de Diamante', Joaquin solo puede tocar 'La Familia' " {
		var lista = #{laFamilia,cisne,almaDeDiamante}
		assert.equals(#{laFamilia,cisne}, joaquin.cualesPuedeTocar(lista))
	}
}
import album.*
import Cancion.*
import laTrastienda.*
import lunaPark.*
import musico.*
import musicoEnGrupo.*
import musicoSolista.*
import luisAlberto.*
import Presentacion.*
import fender.*
import gibson.*


describe "group of tests" {
	
	var lucia
	var joaquin
	var kike
	var soledad
	var especialLaFamilia
	var laFamilia
	var laSole
	var eres
	var corazonAmericano
	var paraLosArboles
	var cisne
	var almaDeDiamante
	var justCrisantemo
	var crisantemo
	var presentacionLuna
	var presentacionLaTrastienda
	
	fixture {
		
		laFamilia = new Cancion(264,"Quiero brindar por mi gente sencilla, por el amor brindo por la Familia")
		eres = new Cancion(145,"Eres lo mejor que me paso en la vida, no tengo duda, no habra nada despues de ti. Eres lo que le dio brillo al dia a dia, y asi sera por siempre, no cambiara, hasta el final de mis dias")
		corazonAmericano = new Cancion(154,"Canta corazon, canta mas alto, que tu pena al fin se va marchando, el nuevo milenio ha de encontrarnos, junto corazon, como soñamos")
		cisne = new Cancion(312,"Hoy el viento se abrio quedo vacio el aire una vez mas y el manantial broto y nadie esta aqui y puedo ver que solo estallan las hojas al brillar")
		almaDeDiamante = new Cancion(216,"Ven a mi con tu dulce luz alma de diamante. Y aunque el sol se nuble despues sos alma de diamante. Cielo o piel silencio o verdad sos alma de diamante. Por eso ven asi con la humanidad alma de diamante")
		crisantemo = new Cancion(175,"Tocame junto a esta pared, yo quede por aqui, cuando no hubo mas luz... quiero mirar a traves de mi piel... Crisantemo, que se abrio... encuentra el camino hacia el cielo")
		
		especialLaFamilia = new Album(#{laFamilia},17,06,1992,100000,89000)
		laSole = new Album(#{eres,corazonAmericano},04,02,2005,200000,130000)
		paraLosArboles = new Album(#{cisne,almaDeDiamante},31,03,2003,50000,49000)
		justCrisantemo = new Album({crisantemo},05,12,2007,28000,27500)
		
		joaquin = new MusicoEnGrupo(20,#{especialLaFamilia},5)
		lucia = new MusicoSolista(70,#{},"Familia")
		kike = new MusicoEnGrupo(60,#{},20)
		soledad = new MusicoSolista(55,#{laSole},"amor")
		luisAlberto = new Musico(8,#{paraLosArboles,justCrisantemo})
		
		presentacionLuna = new Presentacion(20,04,2017,lunaPark)
		presentacionLaTrastienda = new Presentacion(15,11,2017,laTrastienda)
		
	}
	
	/////// REGRESION DE TESTS DE LA PRIMERA ITERACION
	
	test "Joaquin canta en el grupo Pimpinela. Su habilidad es 25" {
		assert.equals(25, joaquin.cantar())
	}
	
	test "Joaquin canta en el grupo Pimpinela y decide iniciar su carrera como solista. Su habilidad es 20"{
		joaquin.carreraSolista()
		assert.equals(20, joaquin.cantar())
	}
	
	test "Lucía se integra a Pimpinela. Su habilidad es de 50" {
		lucia.meterseEnGrupo()
		assert.equals(50, lucia.cantar())
	}
	
	test "Lucía es una cantante solista. Su habilidad es de 70" {
		assert.equals(70,lucia.cantar())
	}
	
	test "luisAlberto toca con la fender"{
		luisAlberto.usarGuitarra(fender)
		assert.equals(fender,luisAlberto.guitarraEnUso())
	}
	
	test "luisAlberto toca con la gibson sana"{
		luisAlberto.usarGuitarra(gibson)
		assert.equals(gibson,luisAlberto.guitarraEnUso())
		assert.that(gibson.estaSana())
	}
	
	test "luisAlberto toca con la gibson maltratada"{
		luisAlberto.usarGuitarra(gibson)
		gibson.esMaltratada()
		assert.equals(gibson,luisAlberto.guitarraEnUso())
		assert.that(!gibson.estaSana())
	}
	
	test "Joaquin no interpreta bien la cancion 'La Familia' " {
		assert.notThat(joaquin.interpretaBien(laFamilia))
	}
	
	test "Joaquin interpreta bien la cancion 'Cisne' " {
		assert.that(joaquin.interpretaBien(cisne))
	}
	
	test "Lucia interpreta bien la cancion 'La Familia' " {
		assert.that(lucia.interpretaBien(laFamilia))
	}
	
	test "Lucia no interpreta bien la cancion 'Cisne' " {
		assert.notThat(lucia.interpretaBien(cisne))
	}
	
	test "luisALberto interpreta bien la cancion 'Cisne' " {
		assert.that(luisAlberto.interpretaBien(cisne))
	}
	test "luisALberto interpreta bien la cancion 'La familia' " {
		assert.that(luisAlberto.interpretaBien(laFamilia))
	}	
	test "Joaquin actua en el Luna Park en una fecha compartida y cobra 50" {
		assert.equals(50,joaquin.costo(presentacionLuna))
	}
	
	test "Joaquin actua solo en La Trastienda y cobra 100" {
		presentacionLaTrastienda.soloTocaJoaquin()
		assert.equals(100,joaquin.costo(presentacionLaTrastienda))
	}
	
	test "La capacidad de La Trastienda para el 05/08/2017 es 700" {
		var fecha = new Date (05,08,2017)
		assert.equals(700,laTrastienda.capacidad(fecha))
	}
	
	test "La capacidad de La Trastienda para el 08/08/2017 es 400" {
		var fecha = new Date(08,08,2017)
		assert.equals(400,laTrastienda.capacidad(fecha))
	}
	
	test "Lucia cobra 400 por su presentacion es La Trastienda" {
		assert.equals(400,lucia.costo(presentacionLaTrastienda))
	}
	
	test "Lucia cobra 500 por su presentacion en el Luna Park" {
		assert.equals(500,lucia.costo(presentacionLuna))
	}
	
	/// HACER: test Luis ALberto cobra 1000 por presentarse en el Luna Park
	/// HACER: test Luis ALberto cobra 1200 por presentarse en el Luna Park
	/// HACER: test La presentacion del Luna Park recauda 1550 (falta modelar a Luis Alberto)
	/// HACER: test La presentacion de La Trastienda recauda 1650 (falta modelar a Luis Alberto)
	
	/////// TESTS DE LA SEGUNDA ITERACION
	
	test "La cancion Crisantemo es corta" {
		assert.that(crisantemo.esCorta())
	}
	
	test "La cancion Alma de Diamante no es corta" {
		assert.that(!almaDeDiamante.esCorta())
	}
	
	test "Soledad es minimalista" {
		assert.that(soledad.esMinimalista())
	}
	
	test "luisAlberto no es minimalista"{
		assert.that(!luisAlberto.esMinimalista())
	}
	
	test "Joaquin no es minimalista" {
		assert.that(!joaquin.esMinimalista())
	}
	
	// NO HECHO test "Crisantemo y Alma de Diamante son las canciones de Luis ALberto que dicen cielo"
	
	// NO HECHO test "Ninguna cancion de Luis Alberto dice pujante"
	
	test "La obra de Kike dura 0 segundos" {
		assert.equals(0,kike.duracionDeSuObra())
	}
}